package com.test.java;

import java.util.Calendar;
import java.util.Date;

public class Ex20_DateTime {
	
	public static void main(String[] args) {
		
		/*
		 
		 
		 
		 자바의 날짜/시간 자료형
		 1. Date 클래스
		 2. Calendar 클래스
		 ------------------------------------
		 3. java.time 패키지 > 추가 클래스 // 신규프로젝트 
		 
		 
		 - 시각 > 포인트
		 - 시간 > 양
		 
		 
		 시각, 시간 > 연산
		 
		 시각 + 시각 = X
		 
		 2024-01-05 12:30:00
		 + 2025-02-10 05:10:30 
		 날짜 단위 자리올림 판단 불가 
		 
		 시각 - 시각 = O (시간)
		 
		1970년 1월 1일 자정 (자바) 기준 얼마나 시간이 흘렀는지 확인하는 방식 > 유닉스 방식(Epoch Time)
		 
		 자료형 따로 없음, 정수 + 정수
		 시간 + 시간 = O (시간)
		 시간 - 시간 = O (시간)
		 
		 시각 + 시간 = O (시각)
		 시각 - 시간 = O (시각)
		 
		 
		 */
		
		// 예제
		
		m1();
		m2();

	}//main

	private static void m2() {
	
		//Calender 클래스
		Calendar c1 = Calendar.getInstance();
		//		java.util.GregorianCalendar[time=1704419306615,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Seoul",offset=32400000,dstSavings=0,useDaylight=false,transitions=30,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2024,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=5,DAY_OF_WEEK(요일)=6(금),DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=48,SECOND=26,MILLISECOND=615,ZONE_OFFSET=32400000,DST_OFFSET=0] 데이트보다 상세한 정보를 알려준다. >원하는 항목만 추출해서 사용
		
		
		System.out.println(c1);
		System.out.println();
		
		// 집합 데이터 > 내가 원하는 항목을  추출
		//- int get(int)
		
		System.out.println(c1.get(1)); // 년도
		System.out.println(c1.get(2)); // 어떤 숫자인지 알기 어렵다
		System.out.println(c1.get(3));
		System.out.println(c1.get(4));
		System.out.println(c1.get(5));
		
		int year = 1; // 변수를 만들어놓기 , 가독성
		System.out.println(c1.get(year)); //년도 
		
		System.out.println(Calendar.YEAR); // 자바에서 알아보기 쉽게 만들어놓음
		
		System.out.println(c1.get(Calendar.YEAR)); // 년도를 알고 싶으면 이렇게만 적으면 된다
		System.out.println();
		
		System.out.println(c1.get(Calendar.YEAR)); // 2024년 
		System.out.println(c1.get(Calendar.MONTH)); // 0 > 월(0~11)
		System.out.println(c1.get(Calendar.DATE)); // 5 > 일
		System.out.println(c1.get(Calendar.HOUR)); // 11 > 시 (12H) 
		System.out.println(c1.get(Calendar.HOUR_OF_DAY)); // 11 > 시 (24H) 
		System.out.println(c1.get(Calendar.MINUTE));  // 8 > 분
		System.out.println(c1.get(Calendar.SECOND)); //  35 > 초 
		System.out.println(c1.get(Calendar.MILLISECOND)); // 0.960 > 밀리초
		System.out.println(c1.get(Calendar.AM_PM)); // 0 > 오전(0), 오후(1)
		System.out.println(c1.get(Calendar.DAY_OF_YEAR)); // 5 > 일(년 기준) 올해 들어서 5일 , 2월 1일이면 32 누적된 값)
		System.out.println(c1.get(Calendar.DAY_OF_MONTH)); // 5 > 일 (월기준)
		System.out.println(c1.get(Calendar.DAY_OF_WEEK)); // 6 > 요일 (일(1) ~ 토 (7))
		System.out.println(c1.get(Calendar.WEEK_OF_YEAR)); // 몇주차 
		System.out.println(c1.get(Calendar.WEEK_OF_MONTH)); // 몇주차 
		// 1월 5주차인지 2월 1주차인지 알고 싶다면, 목요일이 포함되면 해당월 주차
		
		System.out.println();
		
		
		
		
	}

	private static void m1() {
		
		
		// 메인보드 > 시계
		
		// Date 클래스 
		// import java.util.Date
		
		Date now = new Date(); // now > 컴퓨터의 시각을 가져온다. (다같이 약속하는 시간으로는 사용 불가)
		
		// Fri Jan 05 10:44:39 KST 2024
		
		System.out.println(now);
		
		
	}
	

}
