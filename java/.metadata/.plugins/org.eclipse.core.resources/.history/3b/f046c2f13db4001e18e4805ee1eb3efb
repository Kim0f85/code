package com.test.java.collection;

import java.util.ArrayList;

public class Ex54_ArrayList {
	public static void main(String[] args) {
		//Ex54_ArrayList.java
		/*
			
			배열 + 컬랙션 + 제어문 + 클래스 
			
			
			컬랙션, collection
			- JCF, Java collection Framework
			- (향상된) 배열 
			- 향상?
				1. 성능 향상
				2. 상용법 향상 
				3. 길이 가변 > 배열의 길이가 늘었다 줄었다 가능 
		
			컬랙션 종류 
			1. List 계열
				- ArrayList (***********)
				- LinkedList
				- Queue
				- Stack
				- Vector(-)
				
			2. Set 계열
				- HashSet (****)
				- TreeSet
				
			3. Map 계열
				- HashMap (*******)
				- TreeMap
				- Properties(-)
				- HashTable(-)
				
			ArrayList 클래스
			- Iterable<E>, Collection<E>, List<E>
			- Resizable-array implementation of the List interface
			- 순수 배열하고 구조가 가장 유사함. 
		
		*/
		m1();
	}

	private static void m1() {
		//배열 
		//- 타입 명시(int)
		//- 길이 명시(3)
		int[]nums1 = new int[3];
		
		//요소 접근 > 첨자(index) 사용
		nums1[0] = 10;
		nums1[1] = 20;
		nums1[2] = 30;
		
		System.out.println();
		
		//컬렉션 
		//- 타입 명시 (X) > Object 계열
		//- 길이 명시(X)
		//ArrayList nums2 = new ArrayList();
		ArrayList<Integer> nums2 = new ArrayList<Integer>();
		
		//요소 접근 
		//- boolean add(T value)
		//- Append(차래대로 추가)
		nums2.add(100); //nums2[0]
		nums2.add(200); //nums2[1]
		 //nums2[2]
		
		System.out.println(nums2.get(0));
		System.out.println(nums2.get(1));
		System.out.println(nums2.get(2));
		
		System.out.println(nums2.size());
		nums2.add(400);
		nums2.add(500);
		
		for(int i = 0 ; i < nums2.size();i++) {
			System.out.println(nums2.get(i));
		}
		
	}
}
