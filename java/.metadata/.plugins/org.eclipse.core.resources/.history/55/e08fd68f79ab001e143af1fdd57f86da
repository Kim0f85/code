package com.test.java;

import java.util.Calendar;
import java.util.Date;

public class Ex20_DateTime {
	
	public static void main(String[] args) {
		
		/*
		 
		 
		 
		 자바의 날짜/시간 자료형
		 1. Date 클래스
		 2. Calendar 클래스
		 ------------------------------------
		 3. java.time 패키지 > 추가 클래스 // 신규프로젝트 
		 
		 
		 - 시각 > 포인트
		 - 시간 > 양
		 
		 
		 시각, 시간 > 연산
		 
		 시각 + 시각 = X
		 
		 2024-01-05 12:30:00
		 + 2025-02-10 05:10:30 
		 날짜 단위 자리올림 판단 불가 
		 
		 시각 - 시각 = O (시간)
		 
		1970년 1월 1일 자정 (자바) 기준 얼마나 시간이 흘렀는지 확인하는 방식 > 유닉스 방식(Epoch Time)
		 
		 자료형 따로 없음, 정수 + 정수
		 시간 + 시간 = O (시간)
		 시간 - 시간 = O (시간)
		 
		 시각 + 시간 = O (시각)
		 시각 - 시간 = O (시각)
		 
		 
		 */
		
		// 예제
		
		m1();
		m2();
		m3();
		m4();
		m5();

	}//main

	private static void m5() {
		
		// 연산
		// - 시각 - 시각 = 시간
		
		// 내가 태어나서 살아온 시간?
		Calendar now = Calendar.getInstance();
		Calendar birthday = Calendar.getInstance();
		birthday.set(1994, 5, 22, 03, 52, 0);
		
		// System.out.println(now - birthday); 값형이 아닌 참조형이라서 동작을 하지않는다. String 같음
		
		// Epoch Time 을 구해서 단위 통일시켜야 함
		
		// Epoch Time, Tick
		// - 1970년 1월 1일 0분 0분초로부터 몇 밀리초가 흘렀는지에 대한 누적값(ms)
		System.out.println(birthday.getTimeInMillis()); //long java.util.Calendar.getTimeInMillis() 리턴값 : long
		System.out.println(now.getTimeInMillis());
		
		long gap = now.getTimeInMillis() - birthday.getTimeInMillis();
		
		System.out.printf("살아온 시간 : %,dms\n", gap);
		System.out.printf("살아온 시간 : %,d시간\n", gap / 1000 / 60 / 60);
		System.out.printf("살아온 시간 : %,d일\n", gap / 1000 / 60 / 60 / 24); // 시간의 최대 범위는 일이다 , 년이나 월은 오차범위가 있어서 이 방식으로 안됨 
		System.out.printf("살아온 시간 : %,d년\n", gap / 1000 / 60 / 60 / 24 / 365);
		
		
		
		
		
		
		
	}

	private static void m4() {
		
		
		// 연산
		// - 시각 + 시간
		// - 시각 - 시간
		
		// 오늘 만난 커플 > 100일?
		// 오늘 (시각) + 100일 (시간) = 기념일(시각)
		
		
		Calendar now = Calendar.getInstance();
		
		System.out.printf("1일차: %tF\n", now); // 오늘부터 1일 + 99 , 내일부터 1일 + 100
		
		now.add(Calendar.DATE, 99); // 수정
		
		System.out.printf("100일차: %tF\n", now); // now 착각할 수 있다, 기념일로 바뀜 이전에 있던 오늘은 사라짐
		
		
		// 1주일전?
		now = Calendar.getInstance(); // now 초기화
		
		now.add(Calendar.DATE, -7);

		
		System.out.printf("일주일전: %tF\n", now);
		
		// 3분뒤
		now = Calendar.getInstance();
		
		now.add(Calendar.MINUTE, 3);
		
		System.out.printf("라면 시간: %tT\n", now);
		
		
		
	}

	private static void m3() {
		// TODO  쉽게 찾을 수 있도록 도와준다. (Window - showview - tasks )
		// XXX 치명적 문제 
		// FIXME 오류 해결 
		// 키워드 고쳐서 쓸 수 있다. Window - Preference -  Task Tags 
		
		
		//Calendar 메서드
		// 1. int get(in) : 읽기
		// 2. void set(오버로딩) : 쓰기 
		
		// 특정 날짜를 생성하기 > 올해 크리스마스
		Calendar christmas = Calendar.getInstance(); // 현재 시각
		
		System.out.printf("%tF\n", christmas); // 우선 현재 시각을 만든다면, 수정하여 원하는 시간으로 변환
		
		//수정
		
		christmas.set(Calendar.MONTH, 11);
		christmas.set(Calendar.DATE, 25); // 날짜변경
		
		System.out.printf("%tF\n", christmas);
		
		// christmas.set(2024, 11, 25);
		christmas.set(2024, 11, 25, 18, 30, 0);
		
		System.out.printf("%tF %tT\n", christmas, christmas);
		
		
	}

	private static void m2() {
	
		//Calender 클래스
		Calendar c1 = Calendar.getInstance();
		//		java.util.GregorianCalendar[time=1704419306615,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Seoul",offset=32400000,dstSavings=0,useDaylight=false,transitions=30,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2024,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=5,DAY_OF_WEEK(요일)=6(금),DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=48,SECOND=26,MILLISECOND=615,ZONE_OFFSET=32400000,DST_OFFSET=0] 데이트보다 상세한 정보를 알려준다. >원하는 항목만 추출해서 사용
		
		
		System.out.println(c1);
		System.out.println();
		
		// 집합 데이터 > 내가 원하는 항목을  추출
		//- int get(int)
		
		System.out.println(c1.get(1)); // 년도
		System.out.println(c1.get(2)); // 어떤 숫자인지 알기 어렵다
		System.out.println(c1.get(3));
		System.out.println(c1.get(4));
		System.out.println(c1.get(5));
		
		int year = 1; // 변수를 만들어놓기 , 가독성
		System.out.println(c1.get(year)); //년도 
		
		System.out.println(Calendar.YEAR); // 자바에서 알아보기 쉽게 만들어놓음
		
		System.out.println(c1.get(Calendar.YEAR)); // 년도를 알고 싶으면 이렇게만 적으면 된다
		System.out.println();
		
		System.out.println(c1.get(Calendar.YEAR)); // 2024년 
		System.out.println(c1.get(Calendar.MONTH)); // 0 > 월(0~11)
		System.out.println(c1.get(Calendar.DATE)); // 5 > 일
		System.out.println(c1.get(Calendar.HOUR)); // 11 > 시 (12H) 
		System.out.println(c1.get(Calendar.HOUR_OF_DAY)); // 11 > 시 (24H) 
		System.out.println(c1.get(Calendar.MINUTE));  // 8 > 분
		System.out.println(c1.get(Calendar.SECOND)); //  35 > 초 
		System.out.println(c1.get(Calendar.MILLISECOND)); // 0.960 > 밀리초
		System.out.println(c1.get(Calendar.AM_PM)); // 0 > 오전(0), 오후(1)
		System.out.println(c1.get(Calendar.DAY_OF_YEAR)); // 5 > 일(년 기준) 올해 들어서 5일 , 2월 1일이면 32 누적된 값)
		System.out.println(c1.get(Calendar.DAY_OF_MONTH)); // 5 > 일 (월기준)
		System.out.println(c1.get(Calendar.DAY_OF_WEEK)); // 6 > 요일 (일(1) ~ 토 (7))
		System.out.println(c1.get(Calendar.WEEK_OF_YEAR)); // 몇주차 
		System.out.println(c1.get(Calendar.WEEK_OF_MONTH)); // 몇주차 
		// 1월 5주차인지 2월 1주차인지 알고 싶다면, 목요일이 포함되면 해당월 주차
		
		System.out.println();
		
		//요구사항] "오늘은 2024년 1월 5일입니다." 출력하시오.
		
		System.out.printf("오늘은 %d년 %d월 %d일입니다.\n"
				, c1.get(Calendar.YEAR)
				, c1.get(Calendar.MONTH) + 1
				, c1.get(Calendar.DATE));
		
		System.out.println();
		
		//요구사항] "오늘은 2024년 01월 05일입니다." 출력하시오.	
		System.out.printf("오늘은 %d년 %d월 %s일입니다.\n"
				, c1.get(Calendar.YEAR)
				, c1.get(Calendar.MONTH) + 1
				, c1.get(Calendar.DATE) < 10 ? "0" + c1.get(Calendar.DATE) : c1.get(Calendar.DATE) + "");
		System.out.println();
		//c1.get(Calendar.DATE) 숫자로 만들어주어야 함. + "" 추가
		
		// 너비를 나타내는 숫자 앞에  0을 붙이면 자릿수 때문에 0이 들어가나.. 근데 0만 된다.  
		System.out.printf("오늘은 %d년 %02d월 %02d일입니다.\n"
				, c1.get(Calendar.YEAR)
				, c1.get(Calendar.MONTH) + 1
				, c1.get(Calendar.DATE));
		
		System.out.println();
		
		//요구사항] "지금은 오전 11시 36분 49초입니다.'
		
		System.out.printf("지금은 %s %02d시 %02d분 %02d초입니다.\n"
				, c1.get(Calendar.AM_PM) == 0? "오전" : "오후"
				, c1.get(Calendar.HOUR)
				, c1.get(Calendar.MINUTE)
				, c1.get(Calendar.SECOND));
		
		System.out.println();
		
		// printf() > 형식 문자 (날짜 시간)
		
		System.out.printf("%tF\n", c1); // 2024-01-05
		System.out.printf("%tT\n", c1); // 11:32:23
		System.out.printf("%tA\n", c1); // 요일을 우리나라에 맞게, 금요일 
		
	}

	private static void m1() {
		
		
		// 메인보드 > 시계
		
		// Date 클래스 
		// import java.util.Date
		
		Date now = new Date(); // now > 컴퓨터의 시각을 가져온다. (다같이 약속하는 시간으로는 사용 불가)
		
		// Fri Jan 05 10:44:39 KST 2024
		
		System.out.println(now);
		
		
	}
	

}
