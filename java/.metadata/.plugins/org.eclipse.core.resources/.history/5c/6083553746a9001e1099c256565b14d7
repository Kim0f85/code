package com.test.java;

public class Ex03_Variable {

	public static void main(String[] args) {
		
		//모든 자료형 + 변수 생성하기
		
		//정수
		byte b1;
		b1 = 100; // 100 > 상수(=데이터) > 정수형 상수, 정수형 리터럴
		System.out.println(b1);
		
		// Type mismatch: cannot convert from int to byte
		// b1 = 128;
		// b1 = -129;
		
		b1 = Byte.MAX_VALUE; // JDK에서 제공하는 상수, Byte. > MAX_VALUE  선택
		System.out.println(b1);
		
		b1 = Byte.MIN_VALUE;
		System.out.println(b1);
		
		short s1;
		s1 = 100;
		System.out.println(s1);
		
		s1 = 128;
		System.out.println(s1);
		
		s1 = Short.MAX_VALUE;
		System.out.println(s1);

		
		int n1;
		n1 = 100;
		System.out.println(n1);
		
		n1 = 1000000000; // , 콤마 구분 안됨
		n1 = 1_000_000_000; // , 대신 _ 가능
		System.out.println(n1);
		
		n1 = Integer.MAX_VALUE; //int만 Integer
		System.out.println(n1);
		
		long l1;
		l1 = 100;
		System.out.println(l1);
		
		l1 = 100000000;
		System.out.println(l1);
		
		// The literal 30000000000 of type int is out of range 
		// l1 = 30000000000; // int 라고 생각해서 난 에러이다.  정수상수가 int 로 인식되서 
		// System.out.println(l1);
		
		l1 = 30000000000L; // 처음부터 8칸 메모리를 잡으므로 에러가 안난다. 
		System.out.println(l1);
		
		
		// ******* LValue 와 RValue는 반드시 자료형이 동일해야 한다. 
		// 왼쪽(변수) = 오른쪽(상수);
		// LValue = RValue; 
		
		//모든 상수들도 자료형을 가진다. 
		// 모든 상수도 메모리에 올라온다 
		// - 정수형 상수는 int 타입이다. (*****)
		// - 운영 체제가 한번에 처리하는 데이터의 양이 int가 된다. 
		
		// 정수형 상수 4byte 
		
		//100은 자료형이 뭔지?
		b1 = 100; //byte = int 
		s1 = 100; //short = int 
		n1 = 100; // int = int 
		l1 = 100; // long = int 자료형이 안맞아서 에러가 난다
		l1 = 100L; // 21억을 넘어갈때만 L을 추가하기, 메모리 낭비. 
		System.out.println(100);

		
		// int n1 = 100; 를  쪼개면, 100이 먼저 실행되는데, 정수타입의 상수가 나오면 int 로 무조건 취급
		// 하기로 했다 
		// 모든 상수는 임의로 메모리 어딘가에 심어진다. 대신 이름이 없음
		// n1 > 100 복사, 100   자바가 나중에 이름 없는 100을 지운다 
		
		
		// 실수
		// - ***** 실수형 상수는 double 형이다. 
		
		
		// 단정도형
		
		// Type mismatch: cannot convert from double to float
		float f1;
		f1 = 3.14F; 
		System.out.println(f1);
		
		// 배정도형
		
		double d1;
		d1 = 6.28; // D 붙여도 됨
		System.out.println(d1);
		
		// 차이점
		f1 = 123.123456789012345678012345678901234567890F;
		d1 = 123.123456789012345678012345678901234567890D;
		
		System.out.println(f1); // 가수부 저장 공간이 부족해서  
		System.out.println(d1); //
		
		f1 = 12345678901234567801234567890123456789F;
		d1 = 12345678901234567801234567890123456789D;
		
		System.out.println(f1);   
		System.out.println(d1);
		
		System.out.println(Float.MAX_VALUE);
		System.out.println(Double.MAX_VALUE);
		
		double d2 = 0.2;
		double d3 = 0.1;
		System.out.println(d2 + d3); // 0.3일 것 같지만, 내부 저장방식 때문에 오차범위가 생김 
		
		// 0.2 x 10 = 2
		// 0.1 x 10 = 1
		// 2 + 1  
		// 3 / 10 = 0.3
		// 정수와 정수 계산은 오차범위가 안생기므로,  실수를 정수화시킨 뒤 계산함 
		
		// BigDecimal
		
		// 문자형
		char c1;
		c1 = 'A'; //홑따옴표 > 문자형 상수 (리터럴)
		System.out.println(c1);
		
		c1 = '가';
		System.out.println(c1);
		
		c1 = '@';
		System.out.println(c1);
		
		c1 = '1'; // 숫자1과 전혀 무관. 문자로서의 1이다.
		System.out.println(c1);
		
		// Invalid character constant
		// c1 = '홍길동',  글자 하나만 가능해서 에러남 
		
		char name1 = '홍';
		char name2 = '길';
		char name3 = '동';
		
		
		//논리형
		//boolean(불리언), bool(부울)
		boolean flag;
		
		flag = true; //논리형 상수(리터럴)
		flag = false;
		
		System.out.println(flag);
		
		//-------------------------------
		
		//추가 
		//- 참조형
		
		//String, 문자열
		//- 문자 열 > 문자들이 열을 지어 있는 형태 > 문자 집합 > char를 여러개 모아놓은 자료형
		
		//홍길동
		//char name = '홍길동';
		//char name1 = '홍';
		//char name2 = '길';
		//char name3 = '동';

		String name;
		name = "홍길동"; //문자열 상수(리터럴)
		System.out.println(name);
		
	}
	
}
