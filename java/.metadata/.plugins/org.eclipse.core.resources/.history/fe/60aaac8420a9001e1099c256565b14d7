package com.test.java;

public class Ex01_DataType {
	
	public static void main(String[] args) {
		/*
		 
		 새로운 언어 > 자료형
		 
		 자바의 자료형, Data Type
		 - 데이터(자료)의 형태
		 - 데이터의 길이(범위)와 생김새를 미리 정의하고, 그 정의에 따라 분류해놓은 규칙
		 
		 초등학교
		 - 100, 200, 300 > 정수
		 - 3.14, 5.64, 2.22 > 실수 
		 - 홍길동, 자바, 컴퓨터 > 문자
		 
		 자바의 자료형의 기준
		 1. 형태
		 2. 길이
		 
		 자료형 분류
		 1. 기본형, 원시형(Primitive Type), 값형(Value Type) ** 반드시 외우기 ** 
			- 8가지(byte, short, int, long, float, double, char, boolean)
			
			a. 숫자형
				1. 정수형 (부여 받을 수 있는 저장 메모리 공간 1, 2, 4, 8칸)
					a. byte (메모리 1칸)
					 	- 1byte(=8bit)
					 	- 2^8
					 	- -128~127 (저장범위)
					 	
					b. short (2칸)
						- 2byte(=16bit)
						- 2^16
						- -32768 ~ 32767
						
					c. int (4칸)
						- 4byte(=32bit)
						- 2^32
						- -21억 ~ 21억 
						
					d. long (8칸)
						- 8byte(=64bit)
						- 2^64
						- -922경 ~ 922경
					
					1 또는 0을 저장할 수  있는 공간 = bite 
					메모리 부여 최소 8bit = 1byte
					
					앞에 있는 첫 글자가 양수, 음수 부호 비트 (0,1) 
					나머지 데이터 비트 2^7 = 128
					최소 -128 ~ +127 경우의 수 256가지
					 
				2. 실수형
					a. float
						- 4byte
						- 무한대
						- 지수(8bit) + 가수 (23bit)   최대값 ? x 2^127
						- 정수+소수점 이하 6~7자리를 유효하게 표현
						- 단정도형(정밀도)
						
						
						
					b. double
						- 8byte
						- 무한대
						- 지수(11bit) + 가수(52bit)
						- 정수+소수점 이하 15~16자리를 유효하게 표현
						- 배정도형
						
						
					고정소수점 방식
					- 12.345
					
					부동소수점 방식 (자바)
					- 1.23x2e-1 ( 지수표현법) 
					
					가수부가 많으면 잘림
					1234567897545464  X 10^1 
					1234567898  X 10^11 
					
					수의 범위보다 훨씬 더 정밀한 숫자를 저장할 수 있는 것이 중요하다. 
					
					
			b. 문자형
				1. 문자형
					a. char
						- 2byte
						- 숫자형(정수형)
						- 0 ~ 65535
						- 음수 없음(부호 비트 없음)
						- 유니코드(Unicode) 기반
						
						아스키코드 
						
			c. 논리형
				1. 논리형
					a. boolean
		 
		 2. 참조형(Reference Type) - 종류 무한대
		 	- 클래스(class) > 사용자가 정의 가능
		 	- 배열(Array)
		 	- 열거형(Enum)
		 	- 인터페이스(Interface)
		 
		 */
	}

}
